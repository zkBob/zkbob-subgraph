// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CompleteDirectDepositBatch extends ethereum.Event {
  get params(): CompleteDirectDepositBatch__Params {
    return new CompleteDirectDepositBatch__Params(this);
  }
}

export class CompleteDirectDepositBatch__Params {
  _event: CompleteDirectDepositBatch;

  constructor(event: CompleteDirectDepositBatch) {
    this._event = event;
  }

  get indices(): Array<BigInt> {
    return this._event.parameters[0].value.toBigIntArray();
  }
}

export class RefundDirectDeposit extends ethereum.Event {
  get params(): RefundDirectDeposit__Params {
    return new RefundDirectDeposit__Params(this);
  }
}

export class RefundDirectDeposit__Params {
  _event: RefundDirectDeposit;

  constructor(event: RefundDirectDeposit) {
    this._event = event;
  }

  get nonce(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SubmitDirectDeposit extends ethereum.Event {
  get params(): SubmitDirectDeposit__Params {
    return new SubmitDirectDeposit__Params(this);
  }
}

export class SubmitDirectDeposit__Params {
  _event: SubmitDirectDeposit;

  constructor(event: SubmitDirectDeposit) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get fallbackUser(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get zkAddress(): SubmitDirectDepositZkAddressStruct {
    return changetype<SubmitDirectDepositZkAddressStruct>(
      this._event.parameters[3].value.toTuple()
    );
  }

  get deposit(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class SubmitDirectDepositZkAddressStruct extends ethereum.Tuple {
  get diversifier(): Bytes {
    return this[0].toBytes();
  }

  get pk(): Bytes {
    return this[1].toBytes();
  }
}

export class DD__getDirectDepositResultDepositStruct extends ethereum.Tuple {
  get fallbackReceiver(): Address {
    return this[0].toAddress();
  }

  get sent(): BigInt {
    return this[1].toBigInt();
  }

  get deposit(): BigInt {
    return this[2].toBigInt();
  }

  get fee(): BigInt {
    return this[3].toBigInt();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get status(): i32 {
    return this[5].toI32();
  }

  get diversifier(): Bytes {
    return this[6].toBytes();
  }

  get pk(): Bytes {
    return this[7].toBytes();
  }
}

export class DD extends ethereum.SmartContract {
  static bind(address: Address): DD {
    return new DD("DD", address);
  }

  getDirectDeposit(depositId: BigInt): DD__getDirectDepositResultDepositStruct {
    let result = super.call(
      "getDirectDeposit",
      "getDirectDeposit(uint256):((address,uint96,uint64,uint64,uint40,uint8,bytes10,bytes32))",
      [ethereum.Value.fromUnsignedBigInt(depositId)]
    );

    return changetype<DD__getDirectDepositResultDepositStruct>(
      result[0].toTuple()
    );
  }

  try_getDirectDeposit(
    depositId: BigInt
  ): ethereum.CallResult<DD__getDirectDepositResultDepositStruct> {
    let result = super.tryCall(
      "getDirectDeposit",
      "getDirectDeposit(uint256):((address,uint96,uint64,uint64,uint40,uint8,bytes10,bytes32))",
      [ethereum.Value.fromUnsignedBigInt(depositId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<DD__getDirectDepositResultDepositStruct>(value[0].toTuple())
    );
  }
}
